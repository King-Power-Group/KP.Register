#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KP.Register.DBModels
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LoyaltyValue")]
	public partial class LoyaltyValueDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertView_LVHolder(View_LVHolder instance);
    partial void UpdateView_LVHolder(View_LVHolder instance);
    partial void DeleteView_LVHolder(View_LVHolder instance);
    partial void InsertView_LVCard(View_LVCard instance);
    partial void UpdateView_LVCard(View_LVCard instance);
    partial void DeleteView_LVCard(View_LVCard instance);
    partial void InsertLVData(LVData instance);
    partial void UpdateLVData(LVData instance);
    partial void DeleteLVData(LVData instance);
    partial void InsertMAST_Value(MAST_Value instance);
    partial void UpdateMAST_Value(MAST_Value instance);
    partial void DeleteMAST_Value(MAST_Value instance);
    partial void InsertMAST_UpgradeCond(MAST_UpgradeCond instance);
    partial void UpdateMAST_UpgradeCond(MAST_UpgradeCond instance);
    partial void DeleteMAST_UpgradeCond(MAST_UpgradeCond instance);
    partial void InsertMAST_LVCardType(MAST_LVCardType instance);
    partial void UpdateMAST_LVCardType(MAST_LVCardType instance);
    partial void DeleteMAST_LVCardType(MAST_LVCardType instance);
    partial void InsertMAST_Reason(MAST_Reason instance);
    partial void UpdateMAST_Reason(MAST_Reason instance);
    partial void DeleteMAST_Reason(MAST_Reason instance);
    partial void InsertMAST_CardGroup(MAST_CardGroup instance);
    partial void UpdateMAST_CardGroup(MAST_CardGroup instance);
    partial void DeleteMAST_CardGroup(MAST_CardGroup instance);
    partial void InsertMAST_CardStatus(MAST_CardStatus instance);
    partial void UpdateMAST_CardStatus(MAST_CardStatus instance);
    partial void DeleteMAST_CardStatus(MAST_CardStatus instance);
    #endregion
		
		public LoyaltyValueDataContext() : 
				base(global::KP.Register.DBModels.Properties.Settings.Default.LoyaltyValueConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LoyaltyValueDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoyaltyValueDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoyaltyValueDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoyaltyValueDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<View_LVHolder> View_LVHolders
		{
			get
			{
				return this.GetTable<View_LVHolder>();
			}
		}
		
		public System.Data.Linq.Table<View_LVCard> View_LVCards
		{
			get
			{
				return this.GetTable<View_LVCard>();
			}
		}
		
		public System.Data.Linq.Table<LVData> LVDatas
		{
			get
			{
				return this.GetTable<LVData>();
			}
		}
		
		public System.Data.Linq.Table<MAST_Value> MAST_Values
		{
			get
			{
				return this.GetTable<MAST_Value>();
			}
		}
		
		public System.Data.Linq.Table<MAST_UpgradeCond> MAST_UpgradeConds
		{
			get
			{
				return this.GetTable<MAST_UpgradeCond>();
			}
		}
		
		public System.Data.Linq.Table<MAST_LVCardType> MAST_LVCardTypes
		{
			get
			{
				return this.GetTable<MAST_LVCardType>();
			}
		}
		
		public System.Data.Linq.Table<MAST_Reason> MAST_Reasons
		{
			get
			{
				return this.GetTable<MAST_Reason>();
			}
		}
		
		public System.Data.Linq.Table<MAST_CardGroup> MAST_CardGroups
		{
			get
			{
				return this.GetTable<MAST_CardGroup>();
			}
		}
		
		public System.Data.Linq.Table<MAST_CardStatus> MAST_CardStatus
		{
			get
			{
				return this.GetTable<MAST_CardStatus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_LVHolder")]
	public partial class View_LVHolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LVNumber;
		
		private string _ename;
		
		private string _tname;
		
		private string _sex;
		
		private System.DateTime _date_of_birth;
		
		private string _id_card;
		
		private string _program_id;
		
		private string _subprogram_id;
		
		private string _passport_no;
		
		private string _country_code;
		
		private string _email;
		
		private string _mobile1;
		
		private string _del_flag;
		
		private string _TempCard;
		
		private string _mobile2;
		
		private System.Nullable<System.DateTime> _apply_date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLVNumberChanging(string value);
    partial void OnLVNumberChanged();
    partial void OnenameChanging(string value);
    partial void OnenameChanged();
    partial void OntnameChanging(string value);
    partial void OntnameChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void Onid_cardChanging(string value);
    partial void Onid_cardChanged();
    partial void Onprogram_idChanging(string value);
    partial void Onprogram_idChanged();
    partial void Onsubprogram_idChanging(string value);
    partial void Onsubprogram_idChanged();
    partial void Onpassport_noChanging(string value);
    partial void Onpassport_noChanged();
    partial void Oncountry_codeChanging(string value);
    partial void Oncountry_codeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onmobile1Changing(string value);
    partial void Onmobile1Changed();
    partial void Ondel_flagChanging(string value);
    partial void Ondel_flagChanged();
    partial void OnTempCardChanging(string value);
    partial void OnTempCardChanged();
    partial void Onmobile2Changing(string value);
    partial void Onmobile2Changed();
    partial void Onapply_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onapply_dateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public View_LVHolder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LVNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string LVNumber
		{
			get
			{
				return this._LVNumber;
			}
			set
			{
				if ((this._LVNumber != value))
				{
					this.OnLVNumberChanging(value);
					this.SendPropertyChanging();
					this._LVNumber = value;
					this.SendPropertyChanged("LVNumber");
					this.OnLVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ename", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ename
		{
			get
			{
				return this._ename;
			}
			set
			{
				if ((this._ename != value))
				{
					this.OnenameChanging(value);
					this.SendPropertyChanging();
					this._ename = value;
					this.SendPropertyChanged("ename");
					this.OnenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tname", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string tname
		{
			get
			{
				return this._tname;
			}
			set
			{
				if ((this._tname != value))
				{
					this.OntnameChanging(value);
					this.SendPropertyChanging();
					this._tname = value;
					this.SendPropertyChanged("tname");
					this.OntnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_card", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string id_card
		{
			get
			{
				return this._id_card;
			}
			set
			{
				if ((this._id_card != value))
				{
					this.Onid_cardChanging(value);
					this.SendPropertyChanging();
					this._id_card = value;
					this.SendPropertyChanged("id_card");
					this.Onid_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string program_id
		{
			get
			{
				return this._program_id;
			}
			set
			{
				if ((this._program_id != value))
				{
					this.Onprogram_idChanging(value);
					this.SendPropertyChanging();
					this._program_id = value;
					this.SendPropertyChanged("program_id");
					this.Onprogram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subprogram_id", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string subprogram_id
		{
			get
			{
				return this._subprogram_id;
			}
			set
			{
				if ((this._subprogram_id != value))
				{
					this.Onsubprogram_idChanging(value);
					this.SendPropertyChanging();
					this._subprogram_id = value;
					this.SendPropertyChanged("subprogram_id");
					this.Onsubprogram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passport_no", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string passport_no
		{
			get
			{
				return this._passport_no;
			}
			set
			{
				if ((this._passport_no != value))
				{
					this.Onpassport_noChanging(value);
					this.SendPropertyChanging();
					this._passport_no = value;
					this.SendPropertyChanged("passport_no");
					this.Onpassport_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_code", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string country_code
		{
			get
			{
				return this._country_code;
			}
			set
			{
				if ((this._country_code != value))
				{
					this.Oncountry_codeChanging(value);
					this.SendPropertyChanging();
					this._country_code = value;
					this.SendPropertyChanged("country_code");
					this.Oncountry_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile1", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string mobile1
		{
			get
			{
				return this._mobile1;
			}
			set
			{
				if ((this._mobile1 != value))
				{
					this.Onmobile1Changing(value);
					this.SendPropertyChanging();
					this._mobile1 = value;
					this.SendPropertyChanged("mobile1");
					this.Onmobile1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_del_flag", DbType="VarChar(1) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string del_flag
		{
			get
			{
				return this._del_flag;
			}
			set
			{
				if ((this._del_flag != value))
				{
					this.Ondel_flagChanging(value);
					this.SendPropertyChanging();
					this._del_flag = value;
					this.SendPropertyChanged("del_flag");
					this.Ondel_flagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCard", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TempCard
		{
			get
			{
				return this._TempCard;
			}
			set
			{
				if ((this._TempCard != value))
				{
					this.OnTempCardChanging(value);
					this.SendPropertyChanging();
					this._TempCard = value;
					this.SendPropertyChanged("TempCard");
					this.OnTempCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile2", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string mobile2
		{
			get
			{
				return this._mobile2;
			}
			set
			{
				if ((this._mobile2 != value))
				{
					this.Onmobile2Changing(value);
					this.SendPropertyChanging();
					this._mobile2 = value;
					this.SendPropertyChanged("mobile2");
					this.Onmobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apply_date", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> apply_date
		{
			get
			{
				return this._apply_date;
			}
			set
			{
				if ((this._apply_date != value))
				{
					this.Onapply_dateChanging(value);
					this.SendPropertyChanging();
					this._apply_date = value;
					this.SendPropertyChanged("apply_date");
					this.Onapply_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_LVCard")]
	public partial class View_LVCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LVCard;
		
		private string _CardGroupCode;
		
		private string _LVNumber;
		
		private string _emboss_name;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private int _valid_term;
		
		private System.Nullable<System.DateTime> _issue_date;
		
		private short _CardStatus;
		
		private string _reason_id;
		
		private string _shopping_card;
		
		private string _card_type_id;
		
		private string _Note;
		
		private System.DateTime _update_datetime;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<MAST_LVCardType> _MAST_LVCardType;
		
		private EntityRef<MAST_CardGroup> _MAST_CardGroup;
		
		private EntityRef<MAST_CardStatus> _MAST_CardStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLVCardChanging(string value);
    partial void OnLVCardChanged();
    partial void OnCardGroupCodeChanging(string value);
    partial void OnCardGroupCodeChanged();
    partial void OnLVNumberChanging(string value);
    partial void OnLVNumberChanged();
    partial void Onemboss_nameChanging(string value);
    partial void Onemboss_nameChanged();
    partial void Onstart_dateChanging(System.DateTime value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.DateTime value);
    partial void Onend_dateChanged();
    partial void Onvalid_termChanging(int value);
    partial void Onvalid_termChanged();
    partial void Onissue_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onissue_dateChanged();
    partial void OnCardStatusChanging(short value);
    partial void OnCardStatusChanged();
    partial void Onreason_idChanging(string value);
    partial void Onreason_idChanged();
    partial void Onshopping_cardChanging(string value);
    partial void Onshopping_cardChanged();
    partial void Oncard_type_idChanging(string value);
    partial void Oncard_type_idChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void Onupdate_datetimeChanging(System.DateTime value);
    partial void Onupdate_datetimeChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public View_LVCard()
		{
			this._MAST_LVCardType = default(EntityRef<MAST_LVCardType>);
			this._MAST_CardGroup = default(EntityRef<MAST_CardGroup>);
			this._MAST_CardStatus = default(EntityRef<MAST_CardStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LVCard", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string LVCard
		{
			get
			{
				return this._LVCard;
			}
			set
			{
				if ((this._LVCard != value))
				{
					this.OnLVCardChanging(value);
					this.SendPropertyChanging();
					this._LVCard = value;
					this.SendPropertyChanged("LVCard");
					this.OnLVCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardGroupCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CardGroupCode
		{
			get
			{
				return this._CardGroupCode;
			}
			set
			{
				if ((this._CardGroupCode != value))
				{
					if (this._MAST_CardGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCardGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._CardGroupCode = value;
					this.SendPropertyChanged("CardGroupCode");
					this.OnCardGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LVNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LVNumber
		{
			get
			{
				return this._LVNumber;
			}
			set
			{
				if ((this._LVNumber != value))
				{
					this.OnLVNumberChanging(value);
					this.SendPropertyChanging();
					this._LVNumber = value;
					this.SendPropertyChanged("LVNumber");
					this.OnLVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emboss_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string emboss_name
		{
			get
			{
				return this._emboss_name;
			}
			set
			{
				if ((this._emboss_name != value))
				{
					this.Onemboss_nameChanging(value);
					this.SendPropertyChanging();
					this._emboss_name = value;
					this.SendPropertyChanged("emboss_name");
					this.Onemboss_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid_term", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int valid_term
		{
			get
			{
				return this._valid_term;
			}
			set
			{
				if ((this._valid_term != value))
				{
					this.Onvalid_termChanging(value);
					this.SendPropertyChanging();
					this._valid_term = value;
					this.SendPropertyChanged("valid_term");
					this.Onvalid_termChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_issue_date", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> issue_date
		{
			get
			{
				return this._issue_date;
			}
			set
			{
				if ((this._issue_date != value))
				{
					this.Onissue_dateChanging(value);
					this.SendPropertyChanging();
					this._issue_date = value;
					this.SendPropertyChanged("issue_date");
					this.Onissue_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardStatus", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short CardStatus
		{
			get
			{
				return this._CardStatus;
			}
			set
			{
				if ((this._CardStatus != value))
				{
					if (this._MAST_CardStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCardStatusChanging(value);
					this.SendPropertyChanging();
					this._CardStatus = value;
					this.SendPropertyChanged("CardStatus");
					this.OnCardStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string reason_id
		{
			get
			{
				return this._reason_id;
			}
			set
			{
				if ((this._reason_id != value))
				{
					this.Onreason_idChanging(value);
					this.SendPropertyChanging();
					this._reason_id = value;
					this.SendPropertyChanged("reason_id");
					this.Onreason_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopping_card", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string shopping_card
		{
			get
			{
				return this._shopping_card;
			}
			set
			{
				if ((this._shopping_card != value))
				{
					this.Onshopping_cardChanging(value);
					this.SendPropertyChanging();
					this._shopping_card = value;
					this.SendPropertyChanged("shopping_card");
					this.Onshopping_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_type_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string card_type_id
		{
			get
			{
				return this._card_type_id;
			}
			set
			{
				if ((this._card_type_id != value))
				{
					if (this._MAST_LVCardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncard_type_idChanging(value);
					this.SendPropertyChanging();
					this._card_type_id = value;
					this.SendPropertyChanged("card_type_id");
					this.Oncard_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_datetime", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime update_datetime
		{
			get
			{
				return this._update_datetime;
			}
			set
			{
				if ((this._update_datetime != value))
				{
					this.Onupdate_datetimeChanging(value);
					this.SendPropertyChanging();
					this._update_datetime = value;
					this.SendPropertyChanged("update_datetime");
					this.Onupdate_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_LVCardType_View_LVCard", Storage="_MAST_LVCardType", ThisKey="card_type_id", OtherKey="card_type_id", IsForeignKey=true)]
		public MAST_LVCardType MAST_LVCardType
		{
			get
			{
				return this._MAST_LVCardType.Entity;
			}
			set
			{
				MAST_LVCardType previousValue = this._MAST_LVCardType.Entity;
				if (((previousValue != value) 
							|| (this._MAST_LVCardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAST_LVCardType.Entity = null;
						previousValue.View_LVCards.Remove(this);
					}
					this._MAST_LVCardType.Entity = value;
					if ((value != null))
					{
						value.View_LVCards.Add(this);
						this._card_type_id = value.card_type_id;
					}
					else
					{
						this._card_type_id = default(string);
					}
					this.SendPropertyChanged("MAST_LVCardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_CardGroup_View_LVCard", Storage="_MAST_CardGroup", ThisKey="CardGroupCode", OtherKey="CardGroupCode", IsForeignKey=true)]
		public MAST_CardGroup MAST_CardGroup
		{
			get
			{
				return this._MAST_CardGroup.Entity;
			}
			set
			{
				MAST_CardGroup previousValue = this._MAST_CardGroup.Entity;
				if (((previousValue != value) 
							|| (this._MAST_CardGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAST_CardGroup.Entity = null;
						previousValue.View_LVCards.Remove(this);
					}
					this._MAST_CardGroup.Entity = value;
					if ((value != null))
					{
						value.View_LVCards.Add(this);
						this._CardGroupCode = value.CardGroupCode;
					}
					else
					{
						this._CardGroupCode = default(string);
					}
					this.SendPropertyChanged("MAST_CardGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_CardStatus_View_LVCard", Storage="_MAST_CardStatus", ThisKey="CardStatus", OtherKey="CardStatus", IsForeignKey=true)]
		public MAST_CardStatus MAST_CardStatus
		{
			get
			{
				return this._MAST_CardStatus.Entity;
			}
			set
			{
				MAST_CardStatus previousValue = this._MAST_CardStatus.Entity;
				if (((previousValue != value) 
							|| (this._MAST_CardStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAST_CardStatus.Entity = null;
						previousValue.View_LVCards.Remove(this);
					}
					this._MAST_CardStatus.Entity = value;
					if ((value != null))
					{
						value.View_LVCards.Add(this);
						this._CardStatus = value.CardStatus;
					}
					else
					{
						this._CardStatus = default(short);
					}
					this.SendPropertyChanged("MAST_CardStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LVData")]
	public partial class LVData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LVMainKey;
		
		private string _LVNumber;
		
		private string _ValueCode;
		
		private decimal _LVValue;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.DateTime _ValidDate;
		
		private System.DateTime _ExpireDate;
		
		private bool _IsCanceled;
		
		private EntityRef<MAST_Value> _MAST_Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLVMainKeyChanging(long value);
    partial void OnLVMainKeyChanged();
    partial void OnLVNumberChanging(string value);
    partial void OnLVNumberChanged();
    partial void OnValueCodeChanging(string value);
    partial void OnValueCodeChanged();
    partial void OnLVValueChanging(decimal value);
    partial void OnLVValueChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnValidDateChanging(System.DateTime value);
    partial void OnValidDateChanged();
    partial void OnExpireDateChanging(System.DateTime value);
    partial void OnExpireDateChanged();
    partial void OnIsCanceledChanging(bool value);
    partial void OnIsCanceledChanged();
    #endregion
		
		public LVData()
		{
			this._MAST_Value = default(EntityRef<MAST_Value>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LVMainKey", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long LVMainKey
		{
			get
			{
				return this._LVMainKey;
			}
			set
			{
				if ((this._LVMainKey != value))
				{
					this.OnLVMainKeyChanging(value);
					this.SendPropertyChanging();
					this._LVMainKey = value;
					this.SendPropertyChanged("LVMainKey");
					this.OnLVMainKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LVNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LVNumber
		{
			get
			{
				return this._LVNumber;
			}
			set
			{
				if ((this._LVNumber != value))
				{
					this.OnLVNumberChanging(value);
					this.SendPropertyChanging();
					this._LVNumber = value;
					this.SendPropertyChanged("LVNumber");
					this.OnLVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ValueCode
		{
			get
			{
				return this._ValueCode;
			}
			set
			{
				if ((this._ValueCode != value))
				{
					if (this._MAST_Value.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValueCodeChanging(value);
					this.SendPropertyChanging();
					this._ValueCode = value;
					this.SendPropertyChanged("ValueCode");
					this.OnValueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LVValue", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal LVValue
		{
			get
			{
				return this._LVValue;
			}
			set
			{
				if ((this._LVValue != value))
				{
					this.OnLVValueChanging(value);
					this.SendPropertyChanging();
					this._LVValue = value;
					this.SendPropertyChanged("LVValue");
					this.OnLVValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ValidDate
		{
			get
			{
				return this._ValidDate;
			}
			set
			{
				if ((this._ValidDate != value))
				{
					this.OnValidDateChanging(value);
					this.SendPropertyChanging();
					this._ValidDate = value;
					this.SendPropertyChanged("ValidDate");
					this.OnValidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_Value_LVData", Storage="_MAST_Value", ThisKey="ValueCode", OtherKey="ValueCode", IsForeignKey=true)]
		public MAST_Value MAST_Value
		{
			get
			{
				return this._MAST_Value.Entity;
			}
			set
			{
				MAST_Value previousValue = this._MAST_Value.Entity;
				if (((previousValue != value) 
							|| (this._MAST_Value.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAST_Value.Entity = null;
						previousValue.LVDatas.Remove(this);
					}
					this._MAST_Value.Entity = value;
					if ((value != null))
					{
						value.LVDatas.Add(this);
						this._ValueCode = value.ValueCode;
					}
					else
					{
						this._ValueCode = default(string);
					}
					this.SendPropertyChanged("MAST_Value");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAST_Value")]
	public partial class MAST_Value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ValueCode;
		
		private string _ValueName;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private string _ValueTypeCode;
		
		private string _ValueShortName;
		
		private string _AllowBranch;
		
		private bool _IsCanceled;
		
		private bool _IsCorporate;
		
		private bool _IsBirthDay;
		
		private EntitySet<LVData> _LVDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValueCodeChanging(string value);
    partial void OnValueCodeChanged();
    partial void OnValueNameChanging(string value);
    partial void OnValueNameChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnValueTypeCodeChanging(string value);
    partial void OnValueTypeCodeChanged();
    partial void OnValueShortNameChanging(string value);
    partial void OnValueShortNameChanged();
    partial void OnAllowBranchChanging(string value);
    partial void OnAllowBranchChanged();
    partial void OnIsCanceledChanging(bool value);
    partial void OnIsCanceledChanged();
    partial void OnIsCorporateChanging(bool value);
    partial void OnIsCorporateChanged();
    partial void OnIsBirthDayChanging(bool value);
    partial void OnIsBirthDayChanged();
    #endregion
		
		public MAST_Value()
		{
			this._LVDatas = new EntitySet<LVData>(new Action<LVData>(this.attach_LVDatas), new Action<LVData>(this.detach_LVDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string ValueCode
		{
			get
			{
				return this._ValueCode;
			}
			set
			{
				if ((this._ValueCode != value))
				{
					this.OnValueCodeChanging(value);
					this.SendPropertyChanging();
					this._ValueCode = value;
					this.SendPropertyChanged("ValueCode");
					this.OnValueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ValueName
		{
			get
			{
				return this._ValueName;
			}
			set
			{
				if ((this._ValueName != value))
				{
					this.OnValueNameChanging(value);
					this.SendPropertyChanging();
					this._ValueName = value;
					this.SendPropertyChanged("ValueName");
					this.OnValueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTypeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ValueTypeCode
		{
			get
			{
				return this._ValueTypeCode;
			}
			set
			{
				if ((this._ValueTypeCode != value))
				{
					this.OnValueTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ValueTypeCode = value;
					this.SendPropertyChanged("ValueTypeCode");
					this.OnValueTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ValueShortName
		{
			get
			{
				return this._ValueShortName;
			}
			set
			{
				if ((this._ValueShortName != value))
				{
					this.OnValueShortNameChanging(value);
					this.SendPropertyChanging();
					this._ValueShortName = value;
					this.SendPropertyChanged("ValueShortName");
					this.OnValueShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBranch", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AllowBranch
		{
			get
			{
				return this._AllowBranch;
			}
			set
			{
				if ((this._AllowBranch != value))
				{
					this.OnAllowBranchChanging(value);
					this.SendPropertyChanging();
					this._AllowBranch = value;
					this.SendPropertyChanged("AllowBranch");
					this.OnAllowBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorporate", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCorporate
		{
			get
			{
				return this._IsCorporate;
			}
			set
			{
				if ((this._IsCorporate != value))
				{
					this.OnIsCorporateChanging(value);
					this.SendPropertyChanging();
					this._IsCorporate = value;
					this.SendPropertyChanged("IsCorporate");
					this.OnIsCorporateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBirthDay", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsBirthDay
		{
			get
			{
				return this._IsBirthDay;
			}
			set
			{
				if ((this._IsBirthDay != value))
				{
					this.OnIsBirthDayChanging(value);
					this.SendPropertyChanging();
					this._IsBirthDay = value;
					this.SendPropertyChanged("IsBirthDay");
					this.OnIsBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_Value_LVData", Storage="_LVDatas", ThisKey="ValueCode", OtherKey="ValueCode")]
		public EntitySet<LVData> LVDatas
		{
			get
			{
				return this._LVDatas;
			}
			set
			{
				this._LVDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LVDatas(LVData entity)
		{
			this.SendPropertyChanging();
			entity.MAST_Value = this;
		}
		
		private void detach_LVDatas(LVData entity)
		{
			this.SendPropertyChanging();
			entity.MAST_Value = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAST_UpgradeCond")]
	public partial class MAST_UpgradeCond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BaseCardId;
		
		private string _UpgradeCardId;
		
		private decimal _AccuSale;
		
		private bool _IsCancel;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaseCardIdChanging(string value);
    partial void OnBaseCardIdChanged();
    partial void OnUpgradeCardIdChanging(string value);
    partial void OnUpgradeCardIdChanged();
    partial void OnAccuSaleChanging(decimal value);
    partial void OnAccuSaleChanged();
    partial void OnIsCancelChanging(bool value);
    partial void OnIsCancelChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public MAST_UpgradeCond()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCardId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string BaseCardId
		{
			get
			{
				return this._BaseCardId;
			}
			set
			{
				if ((this._BaseCardId != value))
				{
					this.OnBaseCardIdChanging(value);
					this.SendPropertyChanging();
					this._BaseCardId = value;
					this.SendPropertyChanged("BaseCardId");
					this.OnBaseCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeCardId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string UpgradeCardId
		{
			get
			{
				return this._UpgradeCardId;
			}
			set
			{
				if ((this._UpgradeCardId != value))
				{
					this.OnUpgradeCardIdChanging(value);
					this.SendPropertyChanging();
					this._UpgradeCardId = value;
					this.SendPropertyChanged("UpgradeCardId");
					this.OnUpgradeCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuSale", DbType="Decimal(14,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal AccuSale
		{
			get
			{
				return this._AccuSale;
			}
			set
			{
				if ((this._AccuSale != value))
				{
					this.OnAccuSaleChanging(value);
					this.SendPropertyChanging();
					this._AccuSale = value;
					this.SendPropertyChanged("AccuSale");
					this.OnAccuSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancel", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCancel
		{
			get
			{
				return this._IsCancel;
			}
			set
			{
				if ((this._IsCancel != value))
				{
					this.OnIsCancelChanging(value);
					this.SendPropertyChanging();
					this._IsCancel = value;
					this.SendPropertyChanged("IsCancel");
					this.OnIsCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAST_LVCardType")]
	public partial class MAST_LVCardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _card_type_id;
		
		private string _card_type_code;
		
		private string _description;
		
		private string _discount;
		
		private bool _require_ref;
		
		private string _card_group_id;
		
		private string _del_flag;
		
		private System.DateTime _update_datetime;
		
		private EntitySet<View_LVCard> _View_LVCards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncard_type_idChanging(string value);
    partial void Oncard_type_idChanged();
    partial void Oncard_type_codeChanging(string value);
    partial void Oncard_type_codeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndiscountChanging(string value);
    partial void OndiscountChanged();
    partial void Onrequire_refChanging(bool value);
    partial void Onrequire_refChanged();
    partial void Oncard_group_idChanging(string value);
    partial void Oncard_group_idChanged();
    partial void Ondel_flagChanging(string value);
    partial void Ondel_flagChanged();
    partial void Onupdate_datetimeChanging(System.DateTime value);
    partial void Onupdate_datetimeChanged();
    #endregion
		
		public MAST_LVCardType()
		{
			this._View_LVCards = new EntitySet<View_LVCard>(new Action<View_LVCard>(this.attach_View_LVCards), new Action<View_LVCard>(this.detach_View_LVCards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_type_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string card_type_id
		{
			get
			{
				return this._card_type_id;
			}
			set
			{
				if ((this._card_type_id != value))
				{
					this.Oncard_type_idChanging(value);
					this.SendPropertyChanging();
					this._card_type_id = value;
					this.SendPropertyChanged("card_type_id");
					this.Oncard_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_type_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string card_type_code
		{
			get
			{
				return this._card_type_code;
			}
			set
			{
				if ((this._card_type_code != value))
				{
					this.Oncard_type_codeChanging(value);
					this.SendPropertyChanging();
					this._card_type_code = value;
					this.SendPropertyChanged("card_type_code");
					this.Oncard_type_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_require_ref", DbType="Bit NOT NULL")]
		public bool require_ref
		{
			get
			{
				return this._require_ref;
			}
			set
			{
				if ((this._require_ref != value))
				{
					this.Onrequire_refChanging(value);
					this.SendPropertyChanging();
					this._require_ref = value;
					this.SendPropertyChanged("require_ref");
					this.Onrequire_refChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_group_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string card_group_id
		{
			get
			{
				return this._card_group_id;
			}
			set
			{
				if ((this._card_group_id != value))
				{
					this.Oncard_group_idChanging(value);
					this.SendPropertyChanging();
					this._card_group_id = value;
					this.SendPropertyChanged("card_group_id");
					this.Oncard_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_del_flag", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string del_flag
		{
			get
			{
				return this._del_flag;
			}
			set
			{
				if ((this._del_flag != value))
				{
					this.Ondel_flagChanging(value);
					this.SendPropertyChanging();
					this._del_flag = value;
					this.SendPropertyChanged("del_flag");
					this.Ondel_flagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_datetime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime update_datetime
		{
			get
			{
				return this._update_datetime;
			}
			set
			{
				if ((this._update_datetime != value))
				{
					this.Onupdate_datetimeChanging(value);
					this.SendPropertyChanging();
					this._update_datetime = value;
					this.SendPropertyChanged("update_datetime");
					this.Onupdate_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_LVCardType_View_LVCard", Storage="_View_LVCards", ThisKey="card_type_id", OtherKey="card_type_id")]
		public EntitySet<View_LVCard> View_LVCards
		{
			get
			{
				return this._View_LVCards;
			}
			set
			{
				this._View_LVCards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_View_LVCards(View_LVCard entity)
		{
			this.SendPropertyChanging();
			entity.MAST_LVCardType = this;
		}
		
		private void detach_View_LVCards(View_LVCard entity)
		{
			this.SendPropertyChanging();
			entity.MAST_LVCardType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAST_Reason")]
	public partial class MAST_Reason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _reason_id;
		
		private string _reason_desc;
		
		private bool _IsCanceled;
		
		private string _remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreason_idChanging(string value);
    partial void Onreason_idChanged();
    partial void Onreason_descChanging(string value);
    partial void Onreason_descChanged();
    partial void OnIsCanceledChanging(bool value);
    partial void OnIsCanceledChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public MAST_Reason()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason_id", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string reason_id
		{
			get
			{
				return this._reason_id;
			}
			set
			{
				if ((this._reason_id != value))
				{
					this.Onreason_idChanging(value);
					this.SendPropertyChanging();
					this._reason_id = value;
					this.SendPropertyChanged("reason_id");
					this.Onreason_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason_desc", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string reason_desc
		{
			get
			{
				return this._reason_desc;
			}
			set
			{
				if ((this._reason_desc != value))
				{
					this.Onreason_descChanging(value);
					this.SendPropertyChanging();
					this._reason_desc = value;
					this.SendPropertyChanged("reason_desc");
					this.Onreason_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit NOT NULL")]
		public bool IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAST_CardGroup")]
	public partial class MAST_CardGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CardGroupCode;
		
		private string _CardGroupName;
		
		private bool _IsNotLoyalty;
		
		private short _OrderNo;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<View_LVCard> _View_LVCards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCardGroupCodeChanging(string value);
    partial void OnCardGroupCodeChanged();
    partial void OnCardGroupNameChanging(string value);
    partial void OnCardGroupNameChanged();
    partial void OnIsNotLoyaltyChanging(bool value);
    partial void OnIsNotLoyaltyChanged();
    partial void OnOrderNoChanging(short value);
    partial void OnOrderNoChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public MAST_CardGroup()
		{
			this._View_LVCards = new EntitySet<View_LVCard>(new Action<View_LVCard>(this.attach_View_LVCards), new Action<View_LVCard>(this.detach_View_LVCards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardGroupCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string CardGroupCode
		{
			get
			{
				return this._CardGroupCode;
			}
			set
			{
				if ((this._CardGroupCode != value))
				{
					this.OnCardGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._CardGroupCode = value;
					this.SendPropertyChanged("CardGroupCode");
					this.OnCardGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardGroupName", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CardGroupName
		{
			get
			{
				return this._CardGroupName;
			}
			set
			{
				if ((this._CardGroupName != value))
				{
					this.OnCardGroupNameChanging(value);
					this.SendPropertyChanging();
					this._CardGroupName = value;
					this.SendPropertyChanged("CardGroupName");
					this.OnCardGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotLoyalty", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsNotLoyalty
		{
			get
			{
				return this._IsNotLoyalty;
			}
			set
			{
				if ((this._IsNotLoyalty != value))
				{
					this.OnIsNotLoyaltyChanging(value);
					this.SendPropertyChanging();
					this._IsNotLoyalty = value;
					this.SendPropertyChanged("IsNotLoyalty");
					this.OnIsNotLoyaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_CardGroup_View_LVCard", Storage="_View_LVCards", ThisKey="CardGroupCode", OtherKey="CardGroupCode")]
		public EntitySet<View_LVCard> View_LVCards
		{
			get
			{
				return this._View_LVCards;
			}
			set
			{
				this._View_LVCards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_View_LVCards(View_LVCard entity)
		{
			this.SendPropertyChanging();
			entity.MAST_CardGroup = this;
		}
		
		private void detach_View_LVCards(View_LVCard entity)
		{
			this.SendPropertyChanging();
			entity.MAST_CardGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAST_CardStatus")]
	public partial class MAST_CardStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CardStatus;
		
		private string _StatusCode;
		
		private string _StatusName;
		
		private string _StatusMessage;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<View_LVCard> _View_LVCards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCardStatusChanging(short value);
    partial void OnCardStatusChanged();
    partial void OnStatusCodeChanging(string value);
    partial void OnStatusCodeChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnStatusMessageChanging(string value);
    partial void OnStatusMessageChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public MAST_CardStatus()
		{
			this._View_LVCards = new EntitySet<View_LVCard>(new Action<View_LVCard>(this.attach_View_LVCards), new Action<View_LVCard>(this.detach_View_LVCards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardStatus", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public short CardStatus
		{
			get
			{
				return this._CardStatus;
			}
			set
			{
				if ((this._CardStatus != value))
				{
					this.OnCardStatusChanging(value);
					this.SendPropertyChanging();
					this._CardStatus = value;
					this.SendPropertyChanged("CardStatus");
					this.OnCardStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StatusCode
		{
			get
			{
				return this._StatusCode;
			}
			set
			{
				if ((this._StatusCode != value))
				{
					this.OnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._StatusCode = value;
					this.SendPropertyChanged("StatusCode");
					this.OnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusMessage", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StatusMessage
		{
			get
			{
				return this._StatusMessage;
			}
			set
			{
				if ((this._StatusMessage != value))
				{
					this.OnStatusMessageChanging(value);
					this.SendPropertyChanging();
					this._StatusMessage = value;
					this.SendPropertyChanged("StatusMessage");
					this.OnStatusMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAST_CardStatus_View_LVCard", Storage="_View_LVCards", ThisKey="CardStatus", OtherKey="CardStatus")]
		public EntitySet<View_LVCard> View_LVCards
		{
			get
			{
				return this._View_LVCards;
			}
			set
			{
				this._View_LVCards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_View_LVCards(View_LVCard entity)
		{
			this.SendPropertyChanging();
			entity.MAST_CardStatus = this;
		}
		
		private void detach_View_LVCards(View_LVCard entity)
		{
			this.SendPropertyChanging();
			entity.MAST_CardStatus = null;
		}
	}
}
#pragma warning restore 1591
