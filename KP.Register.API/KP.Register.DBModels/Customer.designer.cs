#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KP.Register.DBModels
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CustomerData")]
	public partial class CustomerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCONS_SubBranch(CONS_SubBranch instance);
    partial void UpdateCONS_SubBranch(CONS_SubBranch instance);
    partial void DeleteCONS_SubBranch(CONS_SubBranch instance);
    partial void InsertCONS_Flight(CONS_Flight instance);
    partial void UpdateCONS_Flight(CONS_Flight instance);
    partial void DeleteCONS_Flight(CONS_Flight instance);
    partial void InsertCUSD_Promotion(CUSD_Promotion instance);
    partial void UpdateCUSD_Promotion(CUSD_Promotion instance);
    partial void DeleteCUSD_Promotion(CUSD_Promotion instance);
    partial void InsertCUSD_PromotionAttribute(CUSD_PromotionAttribute instance);
    partial void UpdateCUSD_PromotionAttribute(CUSD_PromotionAttribute instance);
    partial void DeleteCUSD_PromotionAttribute(CUSD_PromotionAttribute instance);
    partial void InsertCUSD_Person(CUSD_Person instance);
    partial void UpdateCUSD_Person(CUSD_Person instance);
    partial void DeleteCUSD_Person(CUSD_Person instance);
    partial void InsertCUSD_PersonAttribute(CUSD_PersonAttribute instance);
    partial void UpdateCUSD_PersonAttribute(CUSD_PersonAttribute instance);
    partial void DeleteCUSD_PersonAttribute(CUSD_PersonAttribute instance);
    partial void InsertCUSD_ShoppingCard(CUSD_ShoppingCard instance);
    partial void UpdateCUSD_ShoppingCard(CUSD_ShoppingCard instance);
    partial void DeleteCUSD_ShoppingCard(CUSD_ShoppingCard instance);
    partial void InsertCUSD_LogChange(CUSD_LogChange instance);
    partial void UpdateCUSD_LogChange(CUSD_LogChange instance);
    partial void DeleteCUSD_LogChange(CUSD_LogChange instance);
    partial void InsertCUSD_PersonHistory(CUSD_PersonHistory instance);
    partial void UpdateCUSD_PersonHistory(CUSD_PersonHistory instance);
    partial void DeleteCUSD_PersonHistory(CUSD_PersonHistory instance);
    partial void InsertDB_Connection(DB_Connection instance);
    partial void UpdateDB_Connection(DB_Connection instance);
    partial void DeleteDB_Connection(DB_Connection instance);
    partial void InsertCUSD_CustCardType(CUSD_CustCardType instance);
    partial void UpdateCUSD_CustCardType(CUSD_CustCardType instance);
    partial void DeleteCUSD_CustCardType(CUSD_CustCardType instance);
    partial void InsertCUSD_LogErrorRegister(CUSD_LogErrorRegister instance);
    partial void UpdateCUSD_LogErrorRegister(CUSD_LogErrorRegister instance);
    partial void DeleteCUSD_LogErrorRegister(CUSD_LogErrorRegister instance);
    #endregion
		
		public CustomerDataContext() : 
				base(global::KP.Register.DBModels.Properties.Settings.Default.CustomerDataConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CONS_SubBranch> CONS_SubBranches
		{
			get
			{
				return this.GetTable<CONS_SubBranch>();
			}
		}
		
		public System.Data.Linq.Table<CONS_Flight> CONS_Flights
		{
			get
			{
				return this.GetTable<CONS_Flight>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_Promotion> CUSD_Promotions
		{
			get
			{
				return this.GetTable<CUSD_Promotion>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_PromotionAttribute> CUSD_PromotionAttributes
		{
			get
			{
				return this.GetTable<CUSD_PromotionAttribute>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_Person> CUSD_Persons
		{
			get
			{
				return this.GetTable<CUSD_Person>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_PersonAttribute> CUSD_PersonAttributes
		{
			get
			{
				return this.GetTable<CUSD_PersonAttribute>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_ShoppingCard> CUSD_ShoppingCards
		{
			get
			{
				return this.GetTable<CUSD_ShoppingCard>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_LogChange> CUSD_LogChanges
		{
			get
			{
				return this.GetTable<CUSD_LogChange>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_PersonHistory> CUSD_PersonHistories
		{
			get
			{
				return this.GetTable<CUSD_PersonHistory>();
			}
		}
		
		public System.Data.Linq.Table<DB_Connection> DB_Connections
		{
			get
			{
				return this.GetTable<DB_Connection>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_CustCardType> CUSD_CustCardTypes
		{
			get
			{
				return this.GetTable<CUSD_CustCardType>();
			}
		}
		
		public System.Data.Linq.Table<CUSD_LogErrorRegister> CUSD_LogErrorRegisters
		{
			get
			{
				return this.GetTable<CUSD_LogErrorRegister>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONS_SubBranch")]
	public partial class CONS_SubBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubBranchCode;
		
		private string _SubBranchName;
		
		private bool _IsCanceled;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private string _BranchNo;
		
		private string _ConfigSC;
		
		private int _CutOffTime;
		
		private int _MaxFlightDay;
		
		private EntitySet<DB_Connection> _DB_Connections;
		
		private EntityRef<CUSD_ShoppingCard> _CUSD_ShoppingCard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubBranchCodeChanging(string value);
    partial void OnSubBranchCodeChanged();
    partial void OnSubBranchNameChanging(string value);
    partial void OnSubBranchNameChanged();
    partial void OnIsCanceledChanging(bool value);
    partial void OnIsCanceledChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnBranchNoChanging(string value);
    partial void OnBranchNoChanged();
    partial void OnConfigSCChanging(string value);
    partial void OnConfigSCChanged();
    partial void OnCutOffTimeChanging(int value);
    partial void OnCutOffTimeChanged();
    partial void OnMaxFlightDayChanging(int value);
    partial void OnMaxFlightDayChanged();
    #endregion
		
		public CONS_SubBranch()
		{
			this._DB_Connections = new EntitySet<DB_Connection>(new Action<DB_Connection>(this.attach_DB_Connections), new Action<DB_Connection>(this.detach_DB_Connections));
			this._CUSD_ShoppingCard = default(EntityRef<CUSD_ShoppingCard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubBranchCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string SubBranchCode
		{
			get
			{
				return this._SubBranchCode;
			}
			set
			{
				if ((this._SubBranchCode != value))
				{
					this.OnSubBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._SubBranchCode = value;
					this.SendPropertyChanged("SubBranchCode");
					this.OnSubBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubBranchName", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SubBranchName
		{
			get
			{
				return this._SubBranchName;
			}
			set
			{
				if ((this._SubBranchName != value))
				{
					this.OnSubBranchNameChanging(value);
					this.SendPropertyChanging();
					this._SubBranchName = value;
					this.SendPropertyChanged("SubBranchName");
					this.OnSubBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchNo", DbType="Char(2)", UpdateCheck=UpdateCheck.Never)]
		public string BranchNo
		{
			get
			{
				return this._BranchNo;
			}
			set
			{
				if ((this._BranchNo != value))
				{
					this.OnBranchNoChanging(value);
					this.SendPropertyChanging();
					this._BranchNo = value;
					this.SendPropertyChanged("BranchNo");
					this.OnBranchNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigSC", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ConfigSC
		{
			get
			{
				return this._ConfigSC;
			}
			set
			{
				if ((this._ConfigSC != value))
				{
					if (this._CUSD_ShoppingCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfigSCChanging(value);
					this.SendPropertyChanging();
					this._ConfigSC = value;
					this.SendPropertyChanged("ConfigSC");
					this.OnConfigSCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutOffTime", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CutOffTime
		{
			get
			{
				return this._CutOffTime;
			}
			set
			{
				if ((this._CutOffTime != value))
				{
					this.OnCutOffTimeChanging(value);
					this.SendPropertyChanging();
					this._CutOffTime = value;
					this.SendPropertyChanged("CutOffTime");
					this.OnCutOffTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFlightDay", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MaxFlightDay
		{
			get
			{
				return this._MaxFlightDay;
			}
			set
			{
				if ((this._MaxFlightDay != value))
				{
					this.OnMaxFlightDayChanging(value);
					this.SendPropertyChanging();
					this._MaxFlightDay = value;
					this.SendPropertyChanged("MaxFlightDay");
					this.OnMaxFlightDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONS_SubBranch_DB_Connection", Storage="_DB_Connections", ThisKey="BranchNo", OtherKey="DbBranch")]
		public EntitySet<DB_Connection> DB_Connections
		{
			get
			{
				return this._DB_Connections;
			}
			set
			{
				this._DB_Connections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_ShoppingCard_CONS_SubBranch", Storage="_CUSD_ShoppingCard", ThisKey="ConfigSC", OtherKey="ConfigSC", IsForeignKey=true)]
		public CUSD_ShoppingCard CUSD_ShoppingCard
		{
			get
			{
				return this._CUSD_ShoppingCard.Entity;
			}
			set
			{
				CUSD_ShoppingCard previousValue = this._CUSD_ShoppingCard.Entity;
				if (((previousValue != value) 
							|| (this._CUSD_ShoppingCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSD_ShoppingCard.Entity = null;
						previousValue.CONS_SubBranches.Remove(this);
					}
					this._CUSD_ShoppingCard.Entity = value;
					if ((value != null))
					{
						value.CONS_SubBranches.Add(this);
						this._ConfigSC = value.ConfigSC;
					}
					else
					{
						this._ConfigSC = default(string);
					}
					this.SendPropertyChanged("CUSD_ShoppingCard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DB_Connections(DB_Connection entity)
		{
			this.SendPropertyChanging();
			entity.CONS_SubBranch = this;
		}
		
		private void detach_DB_Connections(DB_Connection entity)
		{
			this.SendPropertyChanging();
			entity.CONS_SubBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONS_Flight")]
	public partial class CONS_Flight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubBranchCode;
		
		private string _FlightCode;
		
		private string _FlightDesc;
		
		private string _AirlineCode;
		
		private string _FlightNo;
		
		private string _DestAirportCode;
		
		private string _ArrDepAirportCode;
		
		private string _ArrDepTerminal;
		
		private bool _IsOpenFlight;
		
		private bool _D1;
		
		private bool _D2;
		
		private bool _D3;
		
		private bool _D4;
		
		private bool _D5;
		
		private bool _D6;
		
		private bool _D7;
		
		private string _ArrDepTime;
		
		private System.Nullable<bool> _IsCanceled;
		
		private string _PickupCode;
		
		private string _CharterFlight;
		
		private bool _IsOnlyLocal;
		
		private string _ChangeBy;
		
		private System.Nullable<System.DateTime> _ChangeDT;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubBranchCodeChanging(string value);
    partial void OnSubBranchCodeChanged();
    partial void OnFlightCodeChanging(string value);
    partial void OnFlightCodeChanged();
    partial void OnFlightDescChanging(string value);
    partial void OnFlightDescChanged();
    partial void OnAirlineCodeChanging(string value);
    partial void OnAirlineCodeChanged();
    partial void OnFlightNoChanging(string value);
    partial void OnFlightNoChanged();
    partial void OnDestAirportCodeChanging(string value);
    partial void OnDestAirportCodeChanged();
    partial void OnArrDepAirportCodeChanging(string value);
    partial void OnArrDepAirportCodeChanged();
    partial void OnArrDepTerminalChanging(string value);
    partial void OnArrDepTerminalChanged();
    partial void OnIsOpenFlightChanging(bool value);
    partial void OnIsOpenFlightChanged();
    partial void OnD1Changing(bool value);
    partial void OnD1Changed();
    partial void OnD2Changing(bool value);
    partial void OnD2Changed();
    partial void OnD3Changing(bool value);
    partial void OnD3Changed();
    partial void OnD4Changing(bool value);
    partial void OnD4Changed();
    partial void OnD5Changing(bool value);
    partial void OnD5Changed();
    partial void OnD6Changing(bool value);
    partial void OnD6Changed();
    partial void OnD7Changing(bool value);
    partial void OnD7Changed();
    partial void OnArrDepTimeChanging(string value);
    partial void OnArrDepTimeChanged();
    partial void OnIsCanceledChanging(System.Nullable<bool> value);
    partial void OnIsCanceledChanged();
    partial void OnPickupCodeChanging(string value);
    partial void OnPickupCodeChanged();
    partial void OnCharterFlightChanging(string value);
    partial void OnCharterFlightChanged();
    partial void OnIsOnlyLocalChanging(bool value);
    partial void OnIsOnlyLocalChanged();
    partial void OnChangeByChanging(string value);
    partial void OnChangeByChanged();
    partial void OnChangeDTChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDTChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CONS_Flight()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubBranchCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string SubBranchCode
		{
			get
			{
				return this._SubBranchCode;
			}
			set
			{
				if ((this._SubBranchCode != value))
				{
					this.OnSubBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._SubBranchCode = value;
					this.SendPropertyChanged("SubBranchCode");
					this.OnSubBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string FlightCode
		{
			get
			{
				return this._FlightCode;
			}
			set
			{
				if ((this._FlightCode != value))
				{
					this.OnFlightCodeChanging(value);
					this.SendPropertyChanging();
					this._FlightCode = value;
					this.SendPropertyChanged("FlightCode");
					this.OnFlightCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FlightDesc
		{
			get
			{
				return this._FlightDesc;
			}
			set
			{
				if ((this._FlightDesc != value))
				{
					this.OnFlightDescChanging(value);
					this.SendPropertyChanging();
					this._FlightDesc = value;
					this.SendPropertyChanged("FlightDesc");
					this.OnFlightDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlineCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AirlineCode
		{
			get
			{
				return this._AirlineCode;
			}
			set
			{
				if ((this._AirlineCode != value))
				{
					this.OnAirlineCodeChanging(value);
					this.SendPropertyChanging();
					this._AirlineCode = value;
					this.SendPropertyChanged("AirlineCode");
					this.OnAirlineCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNo", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FlightNo
		{
			get
			{
				return this._FlightNo;
			}
			set
			{
				if ((this._FlightNo != value))
				{
					this.OnFlightNoChanging(value);
					this.SendPropertyChanging();
					this._FlightNo = value;
					this.SendPropertyChanged("FlightNo");
					this.OnFlightNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestAirportCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DestAirportCode
		{
			get
			{
				return this._DestAirportCode;
			}
			set
			{
				if ((this._DestAirportCode != value))
				{
					this.OnDestAirportCodeChanging(value);
					this.SendPropertyChanging();
					this._DestAirportCode = value;
					this.SendPropertyChanged("DestAirportCode");
					this.OnDestAirportCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrDepAirportCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ArrDepAirportCode
		{
			get
			{
				return this._ArrDepAirportCode;
			}
			set
			{
				if ((this._ArrDepAirportCode != value))
				{
					this.OnArrDepAirportCodeChanging(value);
					this.SendPropertyChanging();
					this._ArrDepAirportCode = value;
					this.SendPropertyChanged("ArrDepAirportCode");
					this.OnArrDepAirportCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrDepTerminal", DbType="NVarChar(5) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ArrDepTerminal
		{
			get
			{
				return this._ArrDepTerminal;
			}
			set
			{
				if ((this._ArrDepTerminal != value))
				{
					this.OnArrDepTerminalChanging(value);
					this.SendPropertyChanging();
					this._ArrDepTerminal = value;
					this.SendPropertyChanged("ArrDepTerminal");
					this.OnArrDepTerminalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOpenFlight", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsOpenFlight
		{
			get
			{
				return this._IsOpenFlight;
			}
			set
			{
				if ((this._IsOpenFlight != value))
				{
					this.OnIsOpenFlightChanging(value);
					this.SendPropertyChanging();
					this._IsOpenFlight = value;
					this.SendPropertyChanged("IsOpenFlight");
					this.OnIsOpenFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D1", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool D1
		{
			get
			{
				return this._D1;
			}
			set
			{
				if ((this._D1 != value))
				{
					this.OnD1Changing(value);
					this.SendPropertyChanging();
					this._D1 = value;
					this.SendPropertyChanged("D1");
					this.OnD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D2", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool D2
		{
			get
			{
				return this._D2;
			}
			set
			{
				if ((this._D2 != value))
				{
					this.OnD2Changing(value);
					this.SendPropertyChanging();
					this._D2 = value;
					this.SendPropertyChanged("D2");
					this.OnD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D3", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool D3
		{
			get
			{
				return this._D3;
			}
			set
			{
				if ((this._D3 != value))
				{
					this.OnD3Changing(value);
					this.SendPropertyChanging();
					this._D3 = value;
					this.SendPropertyChanged("D3");
					this.OnD3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D4", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool D4
		{
			get
			{
				return this._D4;
			}
			set
			{
				if ((this._D4 != value))
				{
					this.OnD4Changing(value);
					this.SendPropertyChanging();
					this._D4 = value;
					this.SendPropertyChanged("D4");
					this.OnD4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D5", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool D5
		{
			get
			{
				return this._D5;
			}
			set
			{
				if ((this._D5 != value))
				{
					this.OnD5Changing(value);
					this.SendPropertyChanging();
					this._D5 = value;
					this.SendPropertyChanged("D5");
					this.OnD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D6", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool D6
		{
			get
			{
				return this._D6;
			}
			set
			{
				if ((this._D6 != value))
				{
					this.OnD6Changing(value);
					this.SendPropertyChanging();
					this._D6 = value;
					this.SendPropertyChanged("D6");
					this.OnD6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D7", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool D7
		{
			get
			{
				return this._D7;
			}
			set
			{
				if ((this._D7 != value))
				{
					this.OnD7Changing(value);
					this.SendPropertyChanging();
					this._D7 = value;
					this.SendPropertyChanged("D7");
					this.OnD7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrDepTime", DbType="NVarChar(5) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ArrDepTime
		{
			get
			{
				return this._ArrDepTime;
			}
			set
			{
				if ((this._ArrDepTime != value))
				{
					this.OnArrDepTimeChanging(value);
					this.SendPropertyChanging();
					this._ArrDepTime = value;
					this.SendPropertyChanged("ArrDepTime");
					this.OnArrDepTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickupCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PickupCode
		{
			get
			{
				return this._PickupCode;
			}
			set
			{
				if ((this._PickupCode != value))
				{
					this.OnPickupCodeChanging(value);
					this.SendPropertyChanging();
					this._PickupCode = value;
					this.SendPropertyChanged("PickupCode");
					this.OnPickupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharterFlight", DbType="NVarChar(1) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CharterFlight
		{
			get
			{
				return this._CharterFlight;
			}
			set
			{
				if ((this._CharterFlight != value))
				{
					this.OnCharterFlightChanging(value);
					this.SendPropertyChanging();
					this._CharterFlight = value;
					this.SendPropertyChanged("CharterFlight");
					this.OnCharterFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlyLocal", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsOnlyLocal
		{
			get
			{
				return this._IsOnlyLocal;
			}
			set
			{
				if ((this._IsOnlyLocal != value))
				{
					this.OnIsOnlyLocalChanging(value);
					this.SendPropertyChanging();
					this._IsOnlyLocal = value;
					this.SendPropertyChanged("IsOnlyLocal");
					this.OnIsOnlyLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeBy", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ChangeBy
		{
			get
			{
				return this._ChangeBy;
			}
			set
			{
				if ((this._ChangeBy != value))
				{
					this.OnChangeByChanging(value);
					this.SendPropertyChanging();
					this._ChangeBy = value;
					this.SendPropertyChanged("ChangeBy");
					this.OnChangeByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDT", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ChangeDT
		{
			get
			{
				return this._ChangeDT;
			}
			set
			{
				if ((this._ChangeDT != value))
				{
					this.OnChangeDTChanging(value);
					this.SendPropertyChanging();
					this._ChangeDT = value;
					this.SendPropertyChanged("ChangeDT");
					this.OnChangeDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_Promotion")]
	public partial class CUSD_Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PromotionKey;
		
		private string _PromotionCode;
		
		private string _PromotionName;
		
		private string _PromotionDesc;
		
		private string _SubBranchCode;
		
		private System.Nullable<long> _EffectiveDatKey;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _IsCoupon;
		
		private bool _IsHot;
		
		private System.Nullable<bool> _IsCampaign;
		
		private System.Nullable<bool> _IsCanceled;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<CUSD_PromotionAttribute> _CUSD_PromotionAttributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionKeyChanging(long value);
    partial void OnPromotionKeyChanged();
    partial void OnPromotionCodeChanging(string value);
    partial void OnPromotionCodeChanged();
    partial void OnPromotionNameChanging(string value);
    partial void OnPromotionNameChanged();
    partial void OnPromotionDescChanging(string value);
    partial void OnPromotionDescChanged();
    partial void OnSubBranchCodeChanging(string value);
    partial void OnSubBranchCodeChanged();
    partial void OnEffectiveDatKeyChanging(System.Nullable<long> value);
    partial void OnEffectiveDatKeyChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsCouponChanging(bool value);
    partial void OnIsCouponChanged();
    partial void OnIsHotChanging(bool value);
    partial void OnIsHotChanged();
    partial void OnIsCampaignChanging(System.Nullable<bool> value);
    partial void OnIsCampaignChanged();
    partial void OnIsCanceledChanging(System.Nullable<bool> value);
    partial void OnIsCanceledChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CUSD_Promotion()
		{
			this._CUSD_PromotionAttributes = new EntitySet<CUSD_PromotionAttribute>(new Action<CUSD_PromotionAttribute>(this.attach_CUSD_PromotionAttributes), new Action<CUSD_PromotionAttribute>(this.detach_CUSD_PromotionAttributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionKey", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long PromotionKey
		{
			get
			{
				return this._PromotionKey;
			}
			set
			{
				if ((this._PromotionKey != value))
				{
					this.OnPromotionKeyChanging(value);
					this.SendPropertyChanging();
					this._PromotionKey = value;
					this.SendPropertyChanged("PromotionKey");
					this.OnPromotionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionCode", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PromotionCode
		{
			get
			{
				return this._PromotionCode;
			}
			set
			{
				if ((this._PromotionCode != value))
				{
					this.OnPromotionCodeChanging(value);
					this.SendPropertyChanging();
					this._PromotionCode = value;
					this.SendPropertyChanged("PromotionCode");
					this.OnPromotionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionName", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string PromotionName
		{
			get
			{
				return this._PromotionName;
			}
			set
			{
				if ((this._PromotionName != value))
				{
					this.OnPromotionNameChanging(value);
					this.SendPropertyChanging();
					this._PromotionName = value;
					this.SendPropertyChanged("PromotionName");
					this.OnPromotionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionDesc", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string PromotionDesc
		{
			get
			{
				return this._PromotionDesc;
			}
			set
			{
				if ((this._PromotionDesc != value))
				{
					this.OnPromotionDescChanging(value);
					this.SendPropertyChanging();
					this._PromotionDesc = value;
					this.SendPropertyChanged("PromotionDesc");
					this.OnPromotionDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubBranchCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string SubBranchCode
		{
			get
			{
				return this._SubBranchCode;
			}
			set
			{
				if ((this._SubBranchCode != value))
				{
					this.OnSubBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._SubBranchCode = value;
					this.SendPropertyChanged("SubBranchCode");
					this.OnSubBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDatKey", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> EffectiveDatKey
		{
			get
			{
				return this._EffectiveDatKey;
			}
			set
			{
				if ((this._EffectiveDatKey != value))
				{
					this.OnEffectiveDatKeyChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDatKey = value;
					this.SendPropertyChanged("EffectiveDatKey");
					this.OnEffectiveDatKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCoupon", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCoupon
		{
			get
			{
				return this._IsCoupon;
			}
			set
			{
				if ((this._IsCoupon != value))
				{
					this.OnIsCouponChanging(value);
					this.SendPropertyChanging();
					this._IsCoupon = value;
					this.SendPropertyChanged("IsCoupon");
					this.OnIsCouponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHot", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsHot
		{
			get
			{
				return this._IsHot;
			}
			set
			{
				if ((this._IsHot != value))
				{
					this.OnIsHotChanging(value);
					this.SendPropertyChanging();
					this._IsHot = value;
					this.SendPropertyChanged("IsHot");
					this.OnIsHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCampaign", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCampaign
		{
			get
			{
				return this._IsCampaign;
			}
			set
			{
				if ((this._IsCampaign != value))
				{
					this.OnIsCampaignChanging(value);
					this.SendPropertyChanging();
					this._IsCampaign = value;
					this.SendPropertyChanged("IsCampaign");
					this.OnIsCampaignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_Promotion_CUSD_PromotionAttribute", Storage="_CUSD_PromotionAttributes", ThisKey="PromotionKey", OtherKey="PromotionKey")]
		public EntitySet<CUSD_PromotionAttribute> CUSD_PromotionAttributes
		{
			get
			{
				return this._CUSD_PromotionAttributes;
			}
			set
			{
				this._CUSD_PromotionAttributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSD_PromotionAttributes(CUSD_PromotionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_Promotion = this;
		}
		
		private void detach_CUSD_PromotionAttributes(CUSD_PromotionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_Promotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_PromotionAttribute")]
	public partial class CUSD_PromotionAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ProAttKey;
		
		private System.Nullable<long> _PromotionKey;
		
		private string _Attribute;
		
		private string _ValueType;
		
		private string _ValueString;
		
		private System.Nullable<System.DateTime> _ValueDateTime;
		
		private System.Nullable<decimal> _ValueDecimal;
		
		private System.Nullable<bool> _ValueBoolean;
		
		private System.Nullable<bool> _IsCancel;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<CUSD_Promotion> _CUSD_Promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProAttKeyChanging(long value);
    partial void OnProAttKeyChanged();
    partial void OnPromotionKeyChanging(System.Nullable<long> value);
    partial void OnPromotionKeyChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    partial void OnValueTypeChanging(string value);
    partial void OnValueTypeChanged();
    partial void OnValueStringChanging(string value);
    partial void OnValueStringChanged();
    partial void OnValueDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnValueDateTimeChanged();
    partial void OnValueDecimalChanging(System.Nullable<decimal> value);
    partial void OnValueDecimalChanged();
    partial void OnValueBooleanChanging(System.Nullable<bool> value);
    partial void OnValueBooleanChanged();
    partial void OnIsCancelChanging(System.Nullable<bool> value);
    partial void OnIsCancelChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CUSD_PromotionAttribute()
		{
			this._CUSD_Promotion = default(EntityRef<CUSD_Promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProAttKey", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ProAttKey
		{
			get
			{
				return this._ProAttKey;
			}
			set
			{
				if ((this._ProAttKey != value))
				{
					this.OnProAttKeyChanging(value);
					this.SendPropertyChanging();
					this._ProAttKey = value;
					this.SendPropertyChanged("ProAttKey");
					this.OnProAttKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionKey", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> PromotionKey
		{
			get
			{
				return this._PromotionKey;
			}
			set
			{
				if ((this._PromotionKey != value))
				{
					if (this._CUSD_Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionKeyChanging(value);
					this.SendPropertyChanging();
					this._PromotionKey = value;
					this.SendPropertyChanged("PromotionKey");
					this.OnPromotionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueType", DbType="NVarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string ValueType
		{
			get
			{
				return this._ValueType;
			}
			set
			{
				if ((this._ValueType != value))
				{
					this.OnValueTypeChanging(value);
					this.SendPropertyChanging();
					this._ValueType = value;
					this.SendPropertyChanged("ValueType");
					this.OnValueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueString", DbType="NVarChar(400)", UpdateCheck=UpdateCheck.Never)]
		public string ValueString
		{
			get
			{
				return this._ValueString;
			}
			set
			{
				if ((this._ValueString != value))
				{
					this.OnValueStringChanging(value);
					this.SendPropertyChanging();
					this._ValueString = value;
					this.SendPropertyChanged("ValueString");
					this.OnValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ValueDateTime
		{
			get
			{
				return this._ValueDateTime;
			}
			set
			{
				if ((this._ValueDateTime != value))
				{
					this.OnValueDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ValueDateTime = value;
					this.SendPropertyChanged("ValueDateTime");
					this.OnValueDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDecimal", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ValueDecimal
		{
			get
			{
				return this._ValueDecimal;
			}
			set
			{
				if ((this._ValueDecimal != value))
				{
					this.OnValueDecimalChanging(value);
					this.SendPropertyChanging();
					this._ValueDecimal = value;
					this.SendPropertyChanged("ValueDecimal");
					this.OnValueDecimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueBoolean", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ValueBoolean
		{
			get
			{
				return this._ValueBoolean;
			}
			set
			{
				if ((this._ValueBoolean != value))
				{
					this.OnValueBooleanChanging(value);
					this.SendPropertyChanging();
					this._ValueBoolean = value;
					this.SendPropertyChanged("ValueBoolean");
					this.OnValueBooleanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancel", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCancel
		{
			get
			{
				return this._IsCancel;
			}
			set
			{
				if ((this._IsCancel != value))
				{
					this.OnIsCancelChanging(value);
					this.SendPropertyChanging();
					this._IsCancel = value;
					this.SendPropertyChanged("IsCancel");
					this.OnIsCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_Promotion_CUSD_PromotionAttribute", Storage="_CUSD_Promotion", ThisKey="PromotionKey", OtherKey="PromotionKey", IsForeignKey=true)]
		public CUSD_Promotion CUSD_Promotion
		{
			get
			{
				return this._CUSD_Promotion.Entity;
			}
			set
			{
				CUSD_Promotion previousValue = this._CUSD_Promotion.Entity;
				if (((previousValue != value) 
							|| (this._CUSD_Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSD_Promotion.Entity = null;
						previousValue.CUSD_PromotionAttributes.Remove(this);
					}
					this._CUSD_Promotion.Entity = value;
					if ((value != null))
					{
						value.CUSD_PromotionAttributes.Add(this);
						this._PromotionKey = value.PromotionKey;
					}
					else
					{
						this._PromotionKey = default(Nullable<long>);
					}
					this.SendPropertyChanged("CUSD_Promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_Person")]
	public partial class CUSD_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PersonId;
		
		private string _NameEn;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CitizenId;
		
		private string _Nationality;
		
		private string _ShoppingCard;
		
		private System.Nullable<long> _ChangeId;
		
		private EntitySet<CUSD_PersonAttribute> _CUSD_PersonAttributes;
		
		private EntitySet<CUSD_PersonHistory> _CUSD_PersonHistories;
		
		private EntityRef<CUSD_LogChange> _CUSD_LogChange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(long value);
    partial void OnPersonIdChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCitizenIdChanging(string value);
    partial void OnCitizenIdChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnShoppingCardChanging(string value);
    partial void OnShoppingCardChanged();
    partial void OnChangeIdChanging(System.Nullable<long> value);
    partial void OnChangeIdChanged();
    #endregion
		
		public CUSD_Person()
		{
			this._CUSD_PersonAttributes = new EntitySet<CUSD_PersonAttribute>(new Action<CUSD_PersonAttribute>(this.attach_CUSD_PersonAttributes), new Action<CUSD_PersonAttribute>(this.detach_CUSD_PersonAttributes));
			this._CUSD_PersonHistories = new EntitySet<CUSD_PersonHistory>(new Action<CUSD_PersonHistory>(this.attach_CUSD_PersonHistories), new Action<CUSD_PersonHistory>(this.detach_CUSD_PersonHistories));
			this._CUSD_LogChange = default(EntityRef<CUSD_LogChange>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(100)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitizenId", DbType="VarChar(30)")]
		public string CitizenId
		{
			get
			{
				return this._CitizenId;
			}
			set
			{
				if ((this._CitizenId != value))
				{
					this.OnCitizenIdChanging(value);
					this.SendPropertyChanging();
					this._CitizenId = value;
					this.SendPropertyChanged("CitizenId");
					this.OnCitizenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(10)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingCard", DbType="VarChar(30)")]
		public string ShoppingCard
		{
			get
			{
				return this._ShoppingCard;
			}
			set
			{
				if ((this._ShoppingCard != value))
				{
					this.OnShoppingCardChanging(value);
					this.SendPropertyChanging();
					this._ShoppingCard = value;
					this.SendPropertyChanged("ShoppingCard");
					this.OnShoppingCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeId", DbType="BigInt")]
		public System.Nullable<long> ChangeId
		{
			get
			{
				return this._ChangeId;
			}
			set
			{
				if ((this._ChangeId != value))
				{
					if (this._CUSD_LogChange.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeId = value;
					this.SendPropertyChanged("ChangeId");
					this.OnChangeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_Person_CUSD_PersonAttribute", Storage="_CUSD_PersonAttributes", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<CUSD_PersonAttribute> CUSD_PersonAttributes
		{
			get
			{
				return this._CUSD_PersonAttributes;
			}
			set
			{
				this._CUSD_PersonAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_Person_CUSD_PersonHistory", Storage="_CUSD_PersonHistories", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<CUSD_PersonHistory> CUSD_PersonHistories
		{
			get
			{
				return this._CUSD_PersonHistories;
			}
			set
			{
				this._CUSD_PersonHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_LogChange_CUSD_Person", Storage="_CUSD_LogChange", ThisKey="ChangeId", OtherKey="ChangeId", IsForeignKey=true)]
		public CUSD_LogChange CUSD_LogChange
		{
			get
			{
				return this._CUSD_LogChange.Entity;
			}
			set
			{
				CUSD_LogChange previousValue = this._CUSD_LogChange.Entity;
				if (((previousValue != value) 
							|| (this._CUSD_LogChange.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSD_LogChange.Entity = null;
						previousValue.CUSD_Persons.Remove(this);
					}
					this._CUSD_LogChange.Entity = value;
					if ((value != null))
					{
						value.CUSD_Persons.Add(this);
						this._ChangeId = value.ChangeId;
					}
					else
					{
						this._ChangeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CUSD_LogChange");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSD_PersonAttributes(CUSD_PersonAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_Person = this;
		}
		
		private void detach_CUSD_PersonAttributes(CUSD_PersonAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_Person = null;
		}
		
		private void attach_CUSD_PersonHistories(CUSD_PersonHistory entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_Person = this;
		}
		
		private void detach_CUSD_PersonHistories(CUSD_PersonHistory entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_PersonAttribute")]
	public partial class CUSD_PersonAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PerAttId;
		
		private long _PersonId;
		
		private string _Attribute;
		
		private System.Nullable<char> _ValueType;
		
		private string _ValueString;
		
		private System.Nullable<System.DateTime> _ValueDateTime;
		
		private System.Nullable<decimal> _ValueDecimal;
		
		private System.Nullable<bool> _ValueBoolean;
		
		private System.Nullable<bool> _IsCancel;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<CUSD_Person> _CUSD_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerAttIdChanging(long value);
    partial void OnPerAttIdChanged();
    partial void OnPersonIdChanging(long value);
    partial void OnPersonIdChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    partial void OnValueTypeChanging(System.Nullable<char> value);
    partial void OnValueTypeChanged();
    partial void OnValueStringChanging(string value);
    partial void OnValueStringChanged();
    partial void OnValueDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnValueDateTimeChanged();
    partial void OnValueDecimalChanging(System.Nullable<decimal> value);
    partial void OnValueDecimalChanged();
    partial void OnValueBooleanChanging(System.Nullable<bool> value);
    partial void OnValueBooleanChanged();
    partial void OnIsCancelChanging(System.Nullable<bool> value);
    partial void OnIsCancelChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CUSD_PersonAttribute()
		{
			this._CUSD_Person = default(EntityRef<CUSD_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerAttId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long PerAttId
		{
			get
			{
				return this._PerAttId;
			}
			set
			{
				if ((this._PerAttId != value))
				{
					this.OnPerAttIdChanging(value);
					this.SendPropertyChanging();
					this._PerAttId = value;
					this.SendPropertyChanged("PerAttId");
					this.OnPerAttIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._CUSD_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueType", DbType="Char(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<char> ValueType
		{
			get
			{
				return this._ValueType;
			}
			set
			{
				if ((this._ValueType != value))
				{
					this.OnValueTypeChanging(value);
					this.SendPropertyChanging();
					this._ValueType = value;
					this.SendPropertyChanged("ValueType");
					this.OnValueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueString", DbType="NVarChar(400)", UpdateCheck=UpdateCheck.Never)]
		public string ValueString
		{
			get
			{
				return this._ValueString;
			}
			set
			{
				if ((this._ValueString != value))
				{
					this.OnValueStringChanging(value);
					this.SendPropertyChanging();
					this._ValueString = value;
					this.SendPropertyChanged("ValueString");
					this.OnValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ValueDateTime
		{
			get
			{
				return this._ValueDateTime;
			}
			set
			{
				if ((this._ValueDateTime != value))
				{
					this.OnValueDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ValueDateTime = value;
					this.SendPropertyChanged("ValueDateTime");
					this.OnValueDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDecimal", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ValueDecimal
		{
			get
			{
				return this._ValueDecimal;
			}
			set
			{
				if ((this._ValueDecimal != value))
				{
					this.OnValueDecimalChanging(value);
					this.SendPropertyChanging();
					this._ValueDecimal = value;
					this.SendPropertyChanged("ValueDecimal");
					this.OnValueDecimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueBoolean", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ValueBoolean
		{
			get
			{
				return this._ValueBoolean;
			}
			set
			{
				if ((this._ValueBoolean != value))
				{
					this.OnValueBooleanChanging(value);
					this.SendPropertyChanging();
					this._ValueBoolean = value;
					this.SendPropertyChanged("ValueBoolean");
					this.OnValueBooleanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancel", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCancel
		{
			get
			{
				return this._IsCancel;
			}
			set
			{
				if ((this._IsCancel != value))
				{
					this.OnIsCancelChanging(value);
					this.SendPropertyChanging();
					this._IsCancel = value;
					this.SendPropertyChanged("IsCancel");
					this.OnIsCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_Person_CUSD_PersonAttribute", Storage="_CUSD_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public CUSD_Person CUSD_Person
		{
			get
			{
				return this._CUSD_Person.Entity;
			}
			set
			{
				CUSD_Person previousValue = this._CUSD_Person.Entity;
				if (((previousValue != value) 
							|| (this._CUSD_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSD_Person.Entity = null;
						previousValue.CUSD_PersonAttributes.Remove(this);
					}
					this._CUSD_Person.Entity = value;
					if ((value != null))
					{
						value.CUSD_PersonAttributes.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(long);
					}
					this.SendPropertyChanged("CUSD_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_ShoppingCard")]
	public partial class CUSD_ShoppingCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConfigSC;
		
		private string _PrefixShopCard;
		
		private System.Nullable<long> _RunningNo;
		
		private System.Nullable<int> _SizeCardNo;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<CONS_SubBranch> _CONS_SubBranches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigSCChanging(string value);
    partial void OnConfigSCChanged();
    partial void OnPrefixShopCardChanging(string value);
    partial void OnPrefixShopCardChanged();
    partial void OnRunningNoChanging(System.Nullable<long> value);
    partial void OnRunningNoChanged();
    partial void OnSizeCardNoChanging(System.Nullable<int> value);
    partial void OnSizeCardNoChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CUSD_ShoppingCard()
		{
			this._CONS_SubBranches = new EntitySet<CONS_SubBranch>(new Action<CONS_SubBranch>(this.attach_CONS_SubBranches), new Action<CONS_SubBranch>(this.detach_CONS_SubBranches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigSC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string ConfigSC
		{
			get
			{
				return this._ConfigSC;
			}
			set
			{
				if ((this._ConfigSC != value))
				{
					this.OnConfigSCChanging(value);
					this.SendPropertyChanging();
					this._ConfigSC = value;
					this.SendPropertyChanged("ConfigSC");
					this.OnConfigSCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixShopCard", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PrefixShopCard
		{
			get
			{
				return this._PrefixShopCard;
			}
			set
			{
				if ((this._PrefixShopCard != value))
				{
					this.OnPrefixShopCardChanging(value);
					this.SendPropertyChanging();
					this._PrefixShopCard = value;
					this.SendPropertyChanged("PrefixShopCard");
					this.OnPrefixShopCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningNo", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> RunningNo
		{
			get
			{
				return this._RunningNo;
			}
			set
			{
				if ((this._RunningNo != value))
				{
					this.OnRunningNoChanging(value);
					this.SendPropertyChanging();
					this._RunningNo = value;
					this.SendPropertyChanged("RunningNo");
					this.OnRunningNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeCardNo", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SizeCardNo
		{
			get
			{
				return this._SizeCardNo;
			}
			set
			{
				if ((this._SizeCardNo != value))
				{
					this.OnSizeCardNoChanging(value);
					this.SendPropertyChanging();
					this._SizeCardNo = value;
					this.SendPropertyChanged("SizeCardNo");
					this.OnSizeCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_ShoppingCard_CONS_SubBranch", Storage="_CONS_SubBranches", ThisKey="ConfigSC", OtherKey="ConfigSC")]
		public EntitySet<CONS_SubBranch> CONS_SubBranches
		{
			get
			{
				return this._CONS_SubBranches;
			}
			set
			{
				this._CONS_SubBranches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONS_SubBranches(CONS_SubBranch entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_ShoppingCard = this;
		}
		
		private void detach_CONS_SubBranches(CONS_SubBranch entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_ShoppingCard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_LogChange")]
	public partial class CUSD_LogChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ChangeId;
		
		private long _LastChangeId;
		
		private string _ChangeBy;
		
		private System.Nullable<System.DateTime> _ChangeDT;
		
		private string _IP;
		
		private string _SourceCode;
		
		private EntitySet<CUSD_Person> _CUSD_Persons;
		
		private EntitySet<CUSD_PersonHistory> _CUSD_PersonHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChangeIdChanging(long value);
    partial void OnChangeIdChanged();
    partial void OnLastChangeIdChanging(long value);
    partial void OnLastChangeIdChanged();
    partial void OnChangeByChanging(string value);
    partial void OnChangeByChanged();
    partial void OnChangeDTChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDTChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnSourceCodeChanging(string value);
    partial void OnSourceCodeChanged();
    #endregion
		
		public CUSD_LogChange()
		{
			this._CUSD_Persons = new EntitySet<CUSD_Person>(new Action<CUSD_Person>(this.attach_CUSD_Persons), new Action<CUSD_Person>(this.detach_CUSD_Persons));
			this._CUSD_PersonHistories = new EntitySet<CUSD_PersonHistory>(new Action<CUSD_PersonHistory>(this.attach_CUSD_PersonHistories), new Action<CUSD_PersonHistory>(this.detach_CUSD_PersonHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ChangeId
		{
			get
			{
				return this._ChangeId;
			}
			set
			{
				if ((this._ChangeId != value))
				{
					this.OnChangeIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeId = value;
					this.SendPropertyChanged("ChangeId");
					this.OnChangeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeId", DbType="BigInt NOT NULL")]
		public long LastChangeId
		{
			get
			{
				return this._LastChangeId;
			}
			set
			{
				if ((this._LastChangeId != value))
				{
					this.OnLastChangeIdChanging(value);
					this.SendPropertyChanging();
					this._LastChangeId = value;
					this.SendPropertyChanged("LastChangeId");
					this.OnLastChangeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeBy", DbType="VarChar(100)")]
		public string ChangeBy
		{
			get
			{
				return this._ChangeBy;
			}
			set
			{
				if ((this._ChangeBy != value))
				{
					this.OnChangeByChanging(value);
					this.SendPropertyChanging();
					this._ChangeBy = value;
					this.SendPropertyChanged("ChangeBy");
					this.OnChangeByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDT
		{
			get
			{
				return this._ChangeDT;
			}
			set
			{
				if ((this._ChangeDT != value))
				{
					this.OnChangeDTChanging(value);
					this.SendPropertyChanging();
					this._ChangeDT = value;
					this.SendPropertyChanged("ChangeDT");
					this.OnChangeDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCode", DbType="VarChar(50)")]
		public string SourceCode
		{
			get
			{
				return this._SourceCode;
			}
			set
			{
				if ((this._SourceCode != value))
				{
					this.OnSourceCodeChanging(value);
					this.SendPropertyChanging();
					this._SourceCode = value;
					this.SendPropertyChanged("SourceCode");
					this.OnSourceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_LogChange_CUSD_Person", Storage="_CUSD_Persons", ThisKey="ChangeId", OtherKey="ChangeId")]
		public EntitySet<CUSD_Person> CUSD_Persons
		{
			get
			{
				return this._CUSD_Persons;
			}
			set
			{
				this._CUSD_Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_LogChange_CUSD_PersonHistory", Storage="_CUSD_PersonHistories", ThisKey="ChangeId", OtherKey="ChangeId")]
		public EntitySet<CUSD_PersonHistory> CUSD_PersonHistories
		{
			get
			{
				return this._CUSD_PersonHistories;
			}
			set
			{
				this._CUSD_PersonHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSD_Persons(CUSD_Person entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_LogChange = this;
		}
		
		private void detach_CUSD_Persons(CUSD_Person entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_LogChange = null;
		}
		
		private void attach_CUSD_PersonHistories(CUSD_PersonHistory entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_LogChange = this;
		}
		
		private void detach_CUSD_PersonHistories(CUSD_PersonHistory entity)
		{
			this.SendPropertyChanging();
			entity.CUSD_LogChange = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_PersonHistory")]
	public partial class CUSD_PersonHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PerHisId;
		
		private long _PersonId;
		
		private string _FlightNo;
		
		private System.Nullable<System.DateTime> _FlightDT;
		
		private System.Nullable<char> _FlightType;
		
		private System.DateTime _RequestDate;
		
		private System.Nullable<long> _ChangeId;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<CUSD_LogChange> _CUSD_LogChange;
		
		private EntityRef<CUSD_Person> _CUSD_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerHisIdChanging(long value);
    partial void OnPerHisIdChanged();
    partial void OnPersonIdChanging(long value);
    partial void OnPersonIdChanged();
    partial void OnFlightNoChanging(string value);
    partial void OnFlightNoChanged();
    partial void OnFlightDTChanging(System.Nullable<System.DateTime> value);
    partial void OnFlightDTChanged();
    partial void OnFlightTypeChanging(System.Nullable<char> value);
    partial void OnFlightTypeChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnChangeIdChanging(System.Nullable<long> value);
    partial void OnChangeIdChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CUSD_PersonHistory()
		{
			this._CUSD_LogChange = default(EntityRef<CUSD_LogChange>);
			this._CUSD_Person = default(EntityRef<CUSD_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerHisId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long PerHisId
		{
			get
			{
				return this._PerHisId;
			}
			set
			{
				if ((this._PerHisId != value))
				{
					this.OnPerHisIdChanging(value);
					this.SendPropertyChanging();
					this._PerHisId = value;
					this.SendPropertyChanged("PerHisId");
					this.OnPerHisIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._CUSD_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightNo", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string FlightNo
		{
			get
			{
				return this._FlightNo;
			}
			set
			{
				if ((this._FlightNo != value))
				{
					this.OnFlightNoChanging(value);
					this.SendPropertyChanging();
					this._FlightNo = value;
					this.SendPropertyChanged("FlightNo");
					this.OnFlightNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightDT", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FlightDT
		{
			get
			{
				return this._FlightDT;
			}
			set
			{
				if ((this._FlightDT != value))
				{
					this.OnFlightDTChanging(value);
					this.SendPropertyChanging();
					this._FlightDT = value;
					this.SendPropertyChanged("FlightDT");
					this.OnFlightDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightType", DbType="Char(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<char> FlightType
		{
			get
			{
				return this._FlightType;
			}
			set
			{
				if ((this._FlightType != value))
				{
					this.OnFlightTypeChanging(value);
					this.SendPropertyChanging();
					this._FlightType = value;
					this.SendPropertyChanged("FlightType");
					this.OnFlightTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ChangeId
		{
			get
			{
				return this._ChangeId;
			}
			set
			{
				if ((this._ChangeId != value))
				{
					if (this._CUSD_LogChange.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeId = value;
					this.SendPropertyChanged("ChangeId");
					this.OnChangeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_LogChange_CUSD_PersonHistory", Storage="_CUSD_LogChange", ThisKey="ChangeId", OtherKey="ChangeId", IsForeignKey=true)]
		public CUSD_LogChange CUSD_LogChange
		{
			get
			{
				return this._CUSD_LogChange.Entity;
			}
			set
			{
				CUSD_LogChange previousValue = this._CUSD_LogChange.Entity;
				if (((previousValue != value) 
							|| (this._CUSD_LogChange.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSD_LogChange.Entity = null;
						previousValue.CUSD_PersonHistories.Remove(this);
					}
					this._CUSD_LogChange.Entity = value;
					if ((value != null))
					{
						value.CUSD_PersonHistories.Add(this);
						this._ChangeId = value.ChangeId;
					}
					else
					{
						this._ChangeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CUSD_LogChange");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSD_Person_CUSD_PersonHistory", Storage="_CUSD_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public CUSD_Person CUSD_Person
		{
			get
			{
				return this._CUSD_Person.Entity;
			}
			set
			{
				CUSD_Person previousValue = this._CUSD_Person.Entity;
				if (((previousValue != value) 
							|| (this._CUSD_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSD_Person.Entity = null;
						previousValue.CUSD_PersonHistories.Remove(this);
					}
					this._CUSD_Person.Entity = value;
					if ((value != null))
					{
						value.CUSD_PersonHistories.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(long);
					}
					this.SendPropertyChanged("CUSD_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB_Connection")]
	public partial class DB_Connection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConCode;
		
		private string _DbType;
		
		private string _DbBranch;
		
		private string _DbServer;
		
		private string _DbName;
		
		private string _DbUser;
		
		private string _DbPass;
		
		private System.Nullable<bool> _IsCancel;
		
		private EntityRef<CONS_SubBranch> _CONS_SubBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConCodeChanging(string value);
    partial void OnConCodeChanged();
    partial void OnDbTypeChanging(string value);
    partial void OnDbTypeChanged();
    partial void OnDbBranchChanging(string value);
    partial void OnDbBranchChanged();
    partial void OnDbServerChanging(string value);
    partial void OnDbServerChanged();
    partial void OnDbNameChanging(string value);
    partial void OnDbNameChanged();
    partial void OnDbUserChanging(string value);
    partial void OnDbUserChanged();
    partial void OnDbPassChanging(string value);
    partial void OnDbPassChanged();
    partial void OnIsCancelChanging(System.Nullable<bool> value);
    partial void OnIsCancelChanged();
    #endregion
		
		public DB_Connection()
		{
			this._CONS_SubBranch = default(EntityRef<CONS_SubBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConCode
		{
			get
			{
				return this._ConCode;
			}
			set
			{
				if ((this._ConCode != value))
				{
					this.OnConCodeChanging(value);
					this.SendPropertyChanging();
					this._ConCode = value;
					this.SendPropertyChanged("ConCode");
					this.OnConCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbType", DbType="VarChar(20)")]
		public string DbType
		{
			get
			{
				return this._DbType;
			}
			set
			{
				if ((this._DbType != value))
				{
					this.OnDbTypeChanging(value);
					this.SendPropertyChanging();
					this._DbType = value;
					this.SendPropertyChanged("DbType");
					this.OnDbTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbBranch", DbType="Char(2)")]
		public string DbBranch
		{
			get
			{
				return this._DbBranch;
			}
			set
			{
				if ((this._DbBranch != value))
				{
					if (this._CONS_SubBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDbBranchChanging(value);
					this.SendPropertyChanging();
					this._DbBranch = value;
					this.SendPropertyChanged("DbBranch");
					this.OnDbBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbServer", DbType="VarChar(50)")]
		public string DbServer
		{
			get
			{
				return this._DbServer;
			}
			set
			{
				if ((this._DbServer != value))
				{
					this.OnDbServerChanging(value);
					this.SendPropertyChanging();
					this._DbServer = value;
					this.SendPropertyChanged("DbServer");
					this.OnDbServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbName", DbType="VarChar(50)")]
		public string DbName
		{
			get
			{
				return this._DbName;
			}
			set
			{
				if ((this._DbName != value))
				{
					this.OnDbNameChanging(value);
					this.SendPropertyChanging();
					this._DbName = value;
					this.SendPropertyChanged("DbName");
					this.OnDbNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbUser", DbType="VarChar(50)")]
		public string DbUser
		{
			get
			{
				return this._DbUser;
			}
			set
			{
				if ((this._DbUser != value))
				{
					this.OnDbUserChanging(value);
					this.SendPropertyChanging();
					this._DbUser = value;
					this.SendPropertyChanged("DbUser");
					this.OnDbUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbPass", DbType="VarChar(50)")]
		public string DbPass
		{
			get
			{
				return this._DbPass;
			}
			set
			{
				if ((this._DbPass != value))
				{
					this.OnDbPassChanging(value);
					this.SendPropertyChanging();
					this._DbPass = value;
					this.SendPropertyChanged("DbPass");
					this.OnDbPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancel", DbType="Bit")]
		public System.Nullable<bool> IsCancel
		{
			get
			{
				return this._IsCancel;
			}
			set
			{
				if ((this._IsCancel != value))
				{
					this.OnIsCancelChanging(value);
					this.SendPropertyChanging();
					this._IsCancel = value;
					this.SendPropertyChanged("IsCancel");
					this.OnIsCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONS_SubBranch_DB_Connection", Storage="_CONS_SubBranch", ThisKey="DbBranch", OtherKey="BranchNo", IsForeignKey=true)]
		public CONS_SubBranch CONS_SubBranch
		{
			get
			{
				return this._CONS_SubBranch.Entity;
			}
			set
			{
				CONS_SubBranch previousValue = this._CONS_SubBranch.Entity;
				if (((previousValue != value) 
							|| (this._CONS_SubBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONS_SubBranch.Entity = null;
						previousValue.DB_Connections.Remove(this);
					}
					this._CONS_SubBranch.Entity = value;
					if ((value != null))
					{
						value.DB_Connections.Add(this);
						this._DbBranch = value.BranchNo;
					}
					else
					{
						this._DbBranch = default(string);
					}
					this.SendPropertyChanged("CONS_SubBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_CustCardType")]
	public partial class CUSD_CustCardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _card_type_id;
		
		private string _card_type_code;
		
		private string _description;
		
		private string _cust_type_code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncard_type_idChanging(string value);
    partial void Oncard_type_idChanged();
    partial void Oncard_type_codeChanging(string value);
    partial void Oncard_type_codeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Oncust_type_codeChanging(string value);
    partial void Oncust_type_codeChanged();
    #endregion
		
		public CUSD_CustCardType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_type_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string card_type_id
		{
			get
			{
				return this._card_type_id;
			}
			set
			{
				if ((this._card_type_id != value))
				{
					this.Oncard_type_idChanging(value);
					this.SendPropertyChanging();
					this._card_type_id = value;
					this.SendPropertyChanged("card_type_id");
					this.Oncard_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_type_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string card_type_code
		{
			get
			{
				return this._card_type_code;
			}
			set
			{
				if ((this._card_type_code != value))
				{
					this.Oncard_type_codeChanging(value);
					this.SendPropertyChanging();
					this._card_type_code = value;
					this.SendPropertyChanged("card_type_code");
					this.Oncard_type_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_type_code", DbType="Char(5)")]
		public string cust_type_code
		{
			get
			{
				return this._cust_type_code;
			}
			set
			{
				if ((this._cust_type_code != value))
				{
					this.Oncust_type_codeChanging(value);
					this.SendPropertyChanging();
					this._cust_type_code = value;
					this.SendPropertyChanged("cust_type_code");
					this.Oncust_type_codeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSD_LogErrorRegister")]
	public partial class CUSD_LogErrorRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LogRegId;
		
		private System.Nullable<System.DateTime> _AddDateTime;
		
		private string _ShoppingCard;
		
		private string _FormCaller;
		
		private string _ClientIP;
		
		private string _LogMessage;
		
		private string _LogTracking;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogRegIdChanging(long value);
    partial void OnLogRegIdChanged();
    partial void OnAddDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateTimeChanged();
    partial void OnShoppingCardChanging(string value);
    partial void OnShoppingCardChanged();
    partial void OnFormCallerChanging(string value);
    partial void OnFormCallerChanged();
    partial void OnClientIPChanging(string value);
    partial void OnClientIPChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnLogTrackingChanging(string value);
    partial void OnLogTrackingChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CUSD_LogErrorRegister()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogRegId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long LogRegId
		{
			get
			{
				return this._LogRegId;
			}
			set
			{
				if ((this._LogRegId != value))
				{
					this.OnLogRegIdChanging(value);
					this.SendPropertyChanging();
					this._LogRegId = value;
					this.SendPropertyChanged("LogRegId");
					this.OnLogRegIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AddDateTime
		{
			get
			{
				return this._AddDateTime;
			}
			set
			{
				if ((this._AddDateTime != value))
				{
					this.OnAddDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AddDateTime = value;
					this.SendPropertyChanged("AddDateTime");
					this.OnAddDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingCard", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ShoppingCard
		{
			get
			{
				return this._ShoppingCard;
			}
			set
			{
				if ((this._ShoppingCard != value))
				{
					this.OnShoppingCardChanging(value);
					this.SendPropertyChanging();
					this._ShoppingCard = value;
					this.SendPropertyChanged("ShoppingCard");
					this.OnShoppingCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormCaller", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string FormCaller
		{
			get
			{
				return this._FormCaller;
			}
			set
			{
				if ((this._FormCaller != value))
				{
					this.OnFormCallerChanging(value);
					this.SendPropertyChanging();
					this._FormCaller = value;
					this.SendPropertyChanged("FormCaller");
					this.OnFormCallerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIP", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ClientIP
		{
			get
			{
				return this._ClientIP;
			}
			set
			{
				if ((this._ClientIP != value))
				{
					this.OnClientIPChanging(value);
					this.SendPropertyChanging();
					this._ClientIP = value;
					this.SendPropertyChanged("ClientIP");
					this.OnClientIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessage", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string LogMessage
		{
			get
			{
				return this._LogMessage;
			}
			set
			{
				if ((this._LogMessage != value))
				{
					this.OnLogMessageChanging(value);
					this.SendPropertyChanging();
					this._LogMessage = value;
					this.SendPropertyChanged("LogMessage");
					this.OnLogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTracking", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string LogTracking
		{
			get
			{
				return this._LogTracking;
			}
			set
			{
				if ((this._LogTracking != value))
				{
					this.OnLogTrackingChanging(value);
					this.SendPropertyChanging();
					this._LogTracking = value;
					this.SendPropertyChanged("LogTracking");
					this.OnLogTrackingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
